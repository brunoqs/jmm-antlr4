# Generated from jmm.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67")
        buf.write("\u01a6\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7")
        buf.write("\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3")
        buf.write("\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f")
        buf.write("\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3\"\3")
        buf.write("#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3&\3&\3\'")
        buf.write("\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+")
        buf.write("\3+\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3")
        buf.write("/\3/\3/\3/\3\60\6\60\u0140\n\60\r\60\16\60\u0141\3\60")
        buf.write("\5\60\u0145\n\60\3\60\6\60\u0148\n\60\r\60\16\60\u0149")
        buf.write("\3\60\3\60\6\60\u014e\n\60\r\60\16\60\u014f\3\60\7\60")
        buf.write("\u0153\n\60\f\60\16\60\u0156\13\60\3\61\6\61\u0159\n\61")
        buf.write("\r\61\16\61\u015a\3\62\3\62\3\62\5\62\u0160\n\62\3\62")
        buf.write("\3\62\3\63\3\63\3\63\7\63\u0167\n\63\f\63\16\63\u016a")
        buf.write("\13\63\3\63\3\63\3\64\6\64\u016f\n\64\r\64\16\64\u0170")
        buf.write("\3\64\3\64\3\65\3\65\3\65\3\65\7\65\u0179\n\65\f\65\16")
        buf.write("\65\u017c\13\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66")
        buf.write("\3\66\7\66\u0187\n\66\f\66\16\66\u018a\13\66\3\66\3\66")
        buf.write("\3\67\3\67\3\67\3\67\5\67\u0192\n\67\3\67\5\67\u0195\n")
        buf.write("\67\3\67\3\67\3\67\6\67\u019a\n\67\r\67\16\67\u019b\3")
        buf.write("\67\3\67\3\67\3\67\3\67\5\67\u01a3\n\67\38\38\3\u017a")
        buf.write("\29\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r")
        buf.write("\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m\2o\2")
        buf.write("\3\2\r\4\2C\\c|\4\2&&aa\3\2\62;\6\2\f\f\17\17))^^\6\2")
        buf.write("\f\f\17\17$$^^\5\2\13\f\16\17\"\"\4\2\f\f\17\17\n\2$$")
        buf.write("))^^ddhhppttvv\3\2\62\65\3\2\629\5\2\62;CHch\2\u01b7\2")
        buf.write("\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3")
        buf.write("\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2")
        buf.write("\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2")
        buf.write("\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%")
        buf.write("\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\2k\3\2\2\2\3q\3\2\2\2\5y\3\2\2\2\7{")
        buf.write("\3\2\2\2\t\u0082\3\2\2\2\13\u0084\3\2\2\2\r\u008b\3\2")
        buf.write("\2\2\17\u0095\3\2\2\2\21\u009d\3\2\2\2\23\u00a4\3\2\2")
        buf.write("\2\25\u00ad\3\2\2\2\27\u00b3\3\2\2\2\31\u00bb\3\2\2\2")
        buf.write("\33\u00bd\3\2\2\2\35\u00bf\3\2\2\2\37\u00c4\3\2\2\2!\u00c6")
        buf.write("\3\2\2\2#\u00c9\3\2\2\2%\u00ce\3\2\2\2\'\u00d4\3\2\2\2")
        buf.write(")\u00db\3\2\2\2+\u00dd\3\2\2\2-\u00df\3\2\2\2/\u00e1\3")
        buf.write("\2\2\2\61\u00e3\3\2\2\2\63\u00eb\3\2\2\2\65\u00f0\3\2")
        buf.write("\2\2\67\u00f4\3\2\2\29\u00f6\3\2\2\2;\u00f8\3\2\2\2=\u00fb")
        buf.write("\3\2\2\2?\u00fe\3\2\2\2A\u0101\3\2\2\2C\u0103\3\2\2\2")
        buf.write("E\u0106\3\2\2\2G\u0111\3\2\2\2I\u0113\3\2\2\2K\u0115\3")
        buf.write("\2\2\2M\u0117\3\2\2\2O\u011a\3\2\2\2Q\u011c\3\2\2\2S\u011f")
        buf.write("\3\2\2\2U\u0124\3\2\2\2W\u012a\3\2\2\2Y\u012e\3\2\2\2")
        buf.write("[\u0133\3\2\2\2]\u0139\3\2\2\2_\u0144\3\2\2\2a\u0158\3")
        buf.write("\2\2\2c\u015c\3\2\2\2e\u0163\3\2\2\2g\u016e\3\2\2\2i\u0174")
        buf.write("\3\2\2\2k\u0182\3\2\2\2m\u01a2\3\2\2\2o\u01a4\3\2\2\2")
        buf.write("qr\7r\2\2rs\7c\2\2st\7e\2\2tu\7m\2\2uv\7c\2\2vw\7i\2\2")
        buf.write("wx\7g\2\2x\4\3\2\2\2yz\7=\2\2z\6\3\2\2\2{|\7k\2\2|}\7")
        buf.write("o\2\2}~\7r\2\2~\177\7q\2\2\177\u0080\7t\2\2\u0080\u0081")
        buf.write("\7v\2\2\u0081\b\3\2\2\2\u0082\u0083\7\60\2\2\u0083\n\3")
        buf.write("\2\2\2\u0084\u0085\7r\2\2\u0085\u0086\7w\2\2\u0086\u0087")
        buf.write("\7d\2\2\u0087\u0088\7n\2\2\u0088\u0089\7k\2\2\u0089\u008a")
        buf.write("\7e\2\2\u008a\f\3\2\2\2\u008b\u008c\7r\2\2\u008c\u008d")
        buf.write("\7t\2\2\u008d\u008e\7q\2\2\u008e\u008f\7v\2\2\u008f\u0090")
        buf.write("\7g\2\2\u0090\u0091\7e\2\2\u0091\u0092\7v\2\2\u0092\u0093")
        buf.write("\7g\2\2\u0093\u0094\7f\2\2\u0094\16\3\2\2\2\u0095\u0096")
        buf.write("\7r\2\2\u0096\u0097\7t\2\2\u0097\u0098\7k\2\2\u0098\u0099")
        buf.write("\7x\2\2\u0099\u009a\7c\2\2\u009a\u009b\7v\2\2\u009b\u009c")
        buf.write("\7g\2\2\u009c\20\3\2\2\2\u009d\u009e\7u\2\2\u009e\u009f")
        buf.write("\7v\2\2\u009f\u00a0\7c\2\2\u00a0\u00a1\7v\2\2\u00a1\u00a2")
        buf.write("\7k\2\2\u00a2\u00a3\7e\2\2\u00a3\22\3\2\2\2\u00a4\u00a5")
        buf.write("\7c\2\2\u00a5\u00a6\7d\2\2\u00a6\u00a7\7u\2\2\u00a7\u00a8")
        buf.write("\7v\2\2\u00a8\u00a9\7t\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab")
        buf.write("\7e\2\2\u00ab\u00ac\7v\2\2\u00ac\24\3\2\2\2\u00ad\u00ae")
        buf.write("\7e\2\2\u00ae\u00af\7n\2\2\u00af\u00b0\7c\2\2\u00b0\u00b1")
        buf.write("\7u\2\2\u00b1\u00b2\7u\2\2\u00b2\26\3\2\2\2\u00b3\u00b4")
        buf.write("\7g\2\2\u00b4\u00b5\7z\2\2\u00b5\u00b6\7v\2\2\u00b6\u00b7")
        buf.write("\7g\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9\7f\2\2\u00b9\u00ba")
        buf.write("\7u\2\2\u00ba\30\3\2\2\2\u00bb\u00bc\7}\2\2\u00bc\32\3")
        buf.write("\2\2\2\u00bd\u00be\7\177\2\2\u00be\34\3\2\2\2\u00bf\u00c0")
        buf.write("\7x\2\2\u00c0\u00c1\7q\2\2\u00c1\u00c2\7k\2\2\u00c2\u00c3")
        buf.write("\7f\2\2\u00c3\36\3\2\2\2\u00c4\u00c5\7<\2\2\u00c5 \3\2")
        buf.write("\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7h\2\2\u00c8\"\3\2")
        buf.write("\2\2\u00c9\u00ca\7g\2\2\u00ca\u00cb\7n\2\2\u00cb\u00cc")
        buf.write("\7u\2\2\u00cc\u00cd\7g\2\2\u00cd$\3\2\2\2\u00ce\u00cf")
        buf.write("\7y\2\2\u00cf\u00d0\7j\2\2\u00d0\u00d1\7k\2\2\u00d1\u00d2")
        buf.write("\7n\2\2\u00d2\u00d3\7g\2\2\u00d3&\3\2\2\2\u00d4\u00d5")
        buf.write("\7t\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7v\2\2\u00d7\u00d8")
        buf.write("\7w\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7p\2\2\u00da(\3")
        buf.write("\2\2\2\u00db\u00dc\7*\2\2\u00dc*\3\2\2\2\u00dd\u00de\7")
        buf.write(".\2\2\u00de,\3\2\2\2\u00df\u00e0\7+\2\2\u00e0.\3\2\2\2")
        buf.write("\u00e1\u00e2\7?\2\2\u00e2\60\3\2\2\2\u00e3\u00e4\7d\2")
        buf.write("\2\u00e4\u00e5\7q\2\2\u00e5\u00e6\7q\2\2\u00e6\u00e7\7")
        buf.write("n\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7c\2\2\u00e9\u00ea")
        buf.write("\7p\2\2\u00ea\62\3\2\2\2\u00eb\u00ec\7e\2\2\u00ec\u00ed")
        buf.write("\7j\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef\7t\2\2\u00ef\64")
        buf.write("\3\2\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3")
        buf.write("\7v\2\2\u00f3\66\3\2\2\2\u00f4\u00f5\7]\2\2\u00f58\3\2")
        buf.write("\2\2\u00f6\u00f7\7_\2\2\u00f7:\3\2\2\2\u00f8\u00f9\7-")
        buf.write("\2\2\u00f9\u00fa\7?\2\2\u00fa<\3\2\2\2\u00fb\u00fc\7(")
        buf.write("\2\2\u00fc\u00fd\7(\2\2\u00fd>\3\2\2\2\u00fe\u00ff\7?")
        buf.write("\2\2\u00ff\u0100\7?\2\2\u0100@\3\2\2\2\u0101\u0102\7@")
        buf.write("\2\2\u0102B\3\2\2\2\u0103\u0104\7>\2\2\u0104\u0105\7?")
        buf.write("\2\2\u0105D\3\2\2\2\u0106\u0107\7k\2\2\u0107\u0108\7p")
        buf.write("\2\2\u0108\u0109\7u\2\2\u0109\u010a\7v\2\2\u010a\u010b")
        buf.write("\7c\2\2\u010b\u010c\7p\2\2\u010c\u010d\7e\2\2\u010d\u010e")
        buf.write("\7g\2\2\u010e\u010f\7q\2\2\u010f\u0110\7h\2\2\u0110F\3")
        buf.write("\2\2\2\u0111\u0112\7-\2\2\u0112H\3\2\2\2\u0113\u0114\7")
        buf.write("/\2\2\u0114J\3\2\2\2\u0115\u0116\7,\2\2\u0116L\3\2\2\2")
        buf.write("\u0117\u0118\7-\2\2\u0118\u0119\7-\2\2\u0119N\3\2\2\2")
        buf.write("\u011a\u011b\7#\2\2\u011bP\3\2\2\2\u011c\u011d\7/\2\2")
        buf.write("\u011d\u011e\7/\2\2\u011eR\3\2\2\2\u011f\u0120\7v\2\2")
        buf.write("\u0120\u0121\7j\2\2\u0121\u0122\7k\2\2\u0122\u0123\7u")
        buf.write("\2\2\u0123T\3\2\2\2\u0124\u0125\7u\2\2\u0125\u0126\7w")
        buf.write("\2\2\u0126\u0127\7r\2\2\u0127\u0128\7g\2\2\u0128\u0129")
        buf.write("\7t\2\2\u0129V\3\2\2\2\u012a\u012b\7p\2\2\u012b\u012c")
        buf.write("\7g\2\2\u012c\u012d\7y\2\2\u012dX\3\2\2\2\u012e\u012f")
        buf.write("\7v\2\2\u012f\u0130\7t\2\2\u0130\u0131\7w\2\2\u0131\u0132")
        buf.write("\7g\2\2\u0132Z\3\2\2\2\u0133\u0134\7h\2\2\u0134\u0135")
        buf.write("\7c\2\2\u0135\u0136\7n\2\2\u0136\u0137\7u\2\2\u0137\u0138")
        buf.write("\7g\2\2\u0138\\\3\2\2\2\u0139\u013a\7p\2\2\u013a\u013b")
        buf.write("\7w\2\2\u013b\u013c\7n\2\2\u013c\u013d\7n\2\2\u013d^\3")
        buf.write("\2\2\2\u013e\u0140\t\2\2\2\u013f\u013e\3\2\2\2\u0140\u0141")
        buf.write("\3\2\2\2\u0141\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142")
        buf.write("\u0145\3\2\2\2\u0143\u0145\t\3\2\2\u0144\u013f\3\2\2\2")
        buf.write("\u0144\u0143\3\2\2\2\u0145\u0154\3\2\2\2\u0146\u0148\t")
        buf.write("\2\2\2\u0147\u0146\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u0147")
        buf.write("\3\2\2\2\u0149\u014a\3\2\2\2\u014a\u0153\3\2\2\2\u014b")
        buf.write("\u0153\7a\2\2\u014c\u014e\t\4\2\2\u014d\u014c\3\2\2\2")
        buf.write("\u014e\u014f\3\2\2\2\u014f\u014d\3\2\2\2\u014f\u0150\3")
        buf.write("\2\2\2\u0150\u0153\3\2\2\2\u0151\u0153\7&\2\2\u0152\u0147")
        buf.write("\3\2\2\2\u0152\u014b\3\2\2\2\u0152\u014d\3\2\2\2\u0152")
        buf.write("\u0151\3\2\2\2\u0153\u0156\3\2\2\2\u0154\u0152\3\2\2\2")
        buf.write("\u0154\u0155\3\2\2\2\u0155`\3\2\2\2\u0156\u0154\3\2\2")
        buf.write("\2\u0157\u0159\t\4\2\2\u0158\u0157\3\2\2\2\u0159\u015a")
        buf.write("\3\2\2\2\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b")
        buf.write("b\3\2\2\2\u015c\u015f\7)\2\2\u015d\u0160\n\5\2\2\u015e")
        buf.write("\u0160\5m\67\2\u015f\u015d\3\2\2\2\u015f\u015e\3\2\2\2")
        buf.write("\u0160\u0161\3\2\2\2\u0161\u0162\7)\2\2\u0162d\3\2\2\2")
        buf.write("\u0163\u0168\7$\2\2\u0164\u0167\n\6\2\2\u0165\u0167\5")
        buf.write("m\67\2\u0166\u0164\3\2\2\2\u0166\u0165\3\2\2\2\u0167\u016a")
        buf.write("\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169")
        buf.write("\u016b\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016c\7$\2\2")
        buf.write("\u016cf\3\2\2\2\u016d\u016f\t\7\2\2\u016e\u016d\3\2\2")
        buf.write("\2\u016f\u0170\3\2\2\2\u0170\u016e\3\2\2\2\u0170\u0171")
        buf.write("\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0173\b\64\2\2\u0173")
        buf.write("h\3\2\2\2\u0174\u0175\7\61\2\2\u0175\u0176\7,\2\2\u0176")
        buf.write("\u017a\3\2\2\2\u0177\u0179\13\2\2\2\u0178\u0177\3\2\2")
        buf.write("\2\u0179\u017c\3\2\2\2\u017a\u017b\3\2\2\2\u017a\u0178")
        buf.write("\3\2\2\2\u017b\u017d\3\2\2\2\u017c\u017a\3\2\2\2\u017d")
        buf.write("\u017e\7,\2\2\u017e\u017f\7\61\2\2\u017f\u0180\3\2\2\2")
        buf.write("\u0180\u0181\b\65\2\2\u0181j\3\2\2\2\u0182\u0183\7\61")
        buf.write("\2\2\u0183\u0184\7\61\2\2\u0184\u0188\3\2\2\2\u0185\u0187")
        buf.write("\n\b\2\2\u0186\u0185\3\2\2\2\u0187\u018a\3\2\2\2\u0188")
        buf.write("\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018b\3\2\2\2")
        buf.write("\u018a\u0188\3\2\2\2\u018b\u018c\b\66\2\2\u018cl\3\2\2")
        buf.write("\2\u018d\u018e\7^\2\2\u018e\u01a3\t\t\2\2\u018f\u0194")
        buf.write("\7^\2\2\u0190\u0192\t\n\2\2\u0191\u0190\3\2\2\2\u0191")
        buf.write("\u0192\3\2\2\2\u0192\u0193\3\2\2\2\u0193\u0195\t\13\2")
        buf.write("\2\u0194\u0191\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0196")
        buf.write("\3\2\2\2\u0196\u01a3\t\13\2\2\u0197\u0199\7^\2\2\u0198")
        buf.write("\u019a\7w\2\2\u0199\u0198\3\2\2\2\u019a\u019b\3\2\2\2")
        buf.write("\u019b\u0199\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019d\3")
        buf.write("\2\2\2\u019d\u019e\5o8\2\u019e\u019f\5o8\2\u019f\u01a0")
        buf.write("\5o8\2\u01a0\u01a1\5o8\2\u01a1\u01a3\3\2\2\2\u01a2\u018d")
        buf.write("\3\2\2\2\u01a2\u018f\3\2\2\2\u01a2\u0197\3\2\2\2\u01a3")
        buf.write("n\3\2\2\2\u01a4\u01a5\t\f\2\2\u01a5p\3\2\2\2\24\2\u0141")
        buf.write("\u0144\u0149\u014f\u0152\u0154\u015a\u015f\u0166\u0168")
        buf.write("\u0170\u017a\u0188\u0191\u0194\u019b\u01a2\3\2\3\2")
        return buf.getvalue()


class jmmLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    ID = 47
    INT = 48
    CHAR = 49
    STRING = 50
    WS = 51
    COMMENT = 52
    LINE_COMMENT = 53

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'package'", "';'", "'import'", "'.'", "'public'", "'protected'", 
            "'private'", "'static'", "'abstract'", "'class'", "'extends'", 
            "'{'", "'}'", "'void'", "':'", "'if'", "'else'", "'while'", 
            "'return'", "'('", "','", "')'", "'='", "'boolean'", "'char'", 
            "'int'", "'['", "']'", "'+='", "'&&'", "'=='", "'>'", "'<='", 
            "'instanceof'", "'+'", "'-'", "'*'", "'++'", "'!'", "'--'", 
            "'this'", "'super'", "'new'", "'true'", "'false'", "'null'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "CHAR", "STRING", "WS", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "ID", "INT", "CHAR", "STRING", "WS", 
                  "COMMENT", "LINE_COMMENT", "EscapeSequence", "HexDigit" ]

    grammarFileName = "jmm.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


